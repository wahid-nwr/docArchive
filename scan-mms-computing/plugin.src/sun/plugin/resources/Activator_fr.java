package sun.plugin.resources;

import java.util.ListResourceBundle;

public class Activator_fr extends ListResourceBundle
{
  static final Object[][] contents = { { "loading", "Chargement de {0}" }, { "java_applet", "Applet Java" }, { "failed", "Echec du chargement de l'applet Java..." }, { "image_failed", "Echec de création d'une image définie par l'utilisateur.  Vérifiez le nom de fichier de l'image." }, { "java_not_enabled", "Java n'est pas activé" }, { "exception", "Exception : {0}" }, { "bean_code_and_ser", "CODE et JAVA_OBJECT ne peuvent pas être tous les deux définis pour Bean " }, { "status_applet", "Applet {0} {1}" }, { "optpkg.cert_expired", "Le certificat de sécurité a expiré.  Package facultatif non installé." }, { "optpkg.cert_notyieldvalid", "Le certificat de sécurité n'est pas valable.  Package facultatif non installé." }, { "optpkg.cert_notverify", "L'éditeur ne peut pas être vérifié par une source de confiance. Package facultatif non installé." }, { "optpkg.general_error", "Exception générale.  Package facultatif non installé." }, { "optpkg.caption", "Avertissement de sécurité" }, { "optpkg.installer.launch.wait", "Cliquez sur OK pour fermer cette boîte de dialogue et poursuivre le chargement de l'applet une fois le programme d'installation du package facultatif terminé." }, { "optpkg.installer.launch.caption", "Installation d'un package facultatif" }, { "optpkg.prompt_user.text", "Lapplet requiert une version plus récente du package facultatif.  Souhaitez-vous continuer ?" }, { "optpkg.prompt_user.specification", " (spécification de {0})" }, { "optpkg.prompt_user.implementation", " (implémentation de {0})" }, { "optpkg.prompt_user.default.text", "Lapplet requiert l'installation du package facultatif.  Souhaitez-vous continuer ?" }, { "optpkg.prompt_user.caption", "Demander le téléchargement" }, { "cache.error.text", "Impossible de mettre à jour les fichiers mis en cache." }, { "cache.error.caption", "Erreur - Cache" }, { "cache.version_format_error", "{0} n''a pas le format xxxx.xxxx.xxxx.xxxx, où x est un nombre hexadécimal" }, { "cache.version_attrib_error", "Le nombre d'attributs spécifié dans 'cache_archive' ne correspond pas à celui de 'cache_version'" }, { "cache.header_fields_missing", "L'heure de la dernière modification et/ou le délai d'expiration n'est pas disponible.  Le fichier Jar ne sera pas mis en cache." }, { "applet.progress.load", "Chargement de l'applet..." }, { "applet.progress.init", "Initialisation de l'applet..." }, { "applet.progress.start", "Démarrage de l'applet..." }, { "applet.progress.stop", "Arrêt de l'applet..." }, { "applet.progress.destroy", "Destruction de l'applet..." }, { "applet.progress.dispose", "Elimination de l'applet..." }, { "applet.progress.quit", "Sortie de l'applet..." }, { "applet.progress.stoploading", "Chargement arrêté..." }, { "applet.progress.interrupted", "Thread interrompu..." }, { "applet.progress.joining", "Jonction du thread d'applet..." }, { "applet.progress.joined", "Thread d'applet joint..." }, { "applet.progress.loadImage", "Chargement d'image " }, { "applet.progress.loadAudio", "Chargement audio " }, { "applet.progress.findinfo.0", "Recherche d'informations..." }, { "applet.progress.findinfo.1", "Terminé..." }, { "applet.progress.timeout.wait", "Attente de fin de délai..." }, { "applet.progress.timeout.jointing", "Jointure en cours..." }, { "applet.progress.timeout.jointed", "Jointure terminée..." }, { "modality.register", "Récepteur de modalités enregistré" }, { "modality.unregister", "Récepteur de modalités non enregistré" }, { "modality.pushed", "Modalité empilée" }, { "modality.popped", "Modalité désempilée" }, { "progress.listener.added", "Récepteur de progression ajouté : {0}" }, { "progress.listener.removed", "Récepteur de progression supprimé : {0}" }, { "liveconnect.UniversalBrowserRead.enabled", "JavaScript : UniversalBrowserRead activé" }, { "liveconnect.java.system", "JavaScript : appel du code système Java" }, { "liveconnect.same.origin", "JavaScript : appelant et appelé ont la même origine" }, { "liveconnect.default.policy", "JavaScript : politique de sécurité par défaut = {0}" }, { "liveconnect.UniversalJavaPermission.enabled", "JavaScript : UniversalJavaPermission activé" }, { "liveconnect.wrong.securitymodel", "Le modèle de sécurité de Netscape n'est plus pris en charge.\nMigrez vers le modèle de sécurité Java 2.\n" }, { "pluginclassloader.created_files", "{0} a été créé dans le cache." }, { "pluginclassloader.deleting_files", "Suppression des fichiers JAR du cache." }, { "pluginclassloader.file", "   suppression du cache {0}" }, { "pluginclassloader.empty_file", "{0} est vide, suppression du cache." }, { "appletcontext.audio.loaded", "Clip audio chargé : {0}" }, { "appletcontext.image.loaded", "Image chargée : {0}" }, { "securitymgr.automation.printing", "Automatisation : Accepter l'impression" }, { "classloaderinfo.referencing", "Référence au chargeur de classes : {0}, refcount={1}" }, { "classloaderinfo.releasing", "Libération du chargeur de classes : {0}, refcount={1}" }, { "classloaderinfo.caching", "Mise en cache du chargeur de classes : {0}" }, { "classloaderinfo.cachesize", "Taille de cache du chargeur de classes courant : {0}" }, { "classloaderinfo.num", "Nombre de chargeurs de classes mis en cache sur {0}, sans référence {1}" }, { "jsobject.call", "JSObject::call: name={0}" }, { "jsobject.eval", "JSObject::eval({0})" }, { "jsobject.getMember", "JSObject::getMember: name={0}" }, { "jsobject.setMember", "JSObject::setMember: name={0}" }, { "jsobject.removeMember", "JSObject::removeMember: name={0}" }, { "jsobject.getSlot", "JSObject::getSlot: {0}" }, { "jsobject.setSlot", "JSObject::setSlot: slot={0}" }, { "jsobject.invoke.url.permission", "l''url de l''applet est {0} et l''autorisation est égale à {1}" }, { "optpkg.install.info", "Installation du package facultatif {0}" }, { "optpkg.install.fail", "L'installation du package facultatif a échoué." }, { "optpkg.install.ok", "L'installation du package facultatif a réussi." }, { "optpkg.install.automation", "Automatisation : Accepter l'installation de modules Java optionnels" }, { "optpkg.install.granted", "Téléchargement du package facultatif autorisé par l''utilisateur, télécharger à partir de {0}" }, { "optpkg.install.deny", "Téléchargement du package facultatif non autorisé par l'utilisateur" }, { "optpkg.install.begin", "Installation {0}" }, { "optpkg.install.java.launch", "Démarrage du programme d'installation Java" }, { "optpkg.install.java.launch.command", "Démarrage du programme d''installation Java par {0}" }, { "optpkg.install.native.launch", "Démarrage du programme d'installation natif" }, { "optpkg.install.native.launch.fail.0", "Impossible d''exécuter {0}" }, { "optpkg.install.native.launch.fail.1", "L''accès à {0} a échoué" }, { "optpkg.install.raw.launch", "Installation du package facultatif brut" }, { "optpkg.install.raw.copy", "Copie du package facultatif brut à partir de {0} vers {1}" }, { "optpkg.install.error.nomethod", "Fournisseur d'extension dépendant non installé : Impossible d'obtenir la méthode  addExtensionInstallationProvider" }, { "optpkg.install.error.noclass", "Fournisseur d'extension dépendant non installé : Impossible d'obtenir la classe sun.misc.ExtensionDependency" }, { "progress_dialog.downloading", "Plug-in : Téléchargement..." }, { "progress_dialog.dismiss_button", "Abandonner" }, { "progress_dialog.dismiss_button.acceleratorKey", new Integer(65) }, { "progress_dialog.from", "à partir de" }, { "applet_viewer.color_tag", "Nombre de composants incorrect dans {0}" }, { "progress_info.downloading", "Téléchargement de fichiers JAR" }, { "progress_bar.preload", "Pré-chargement des fichiers JAR : {0}" }, { "cache.size", "Taille du cache : {0}" }, { "cache.cleanup", "La taille du cache est : {0} octets. Vous devez libérer de l''espace" }, { "cache.full", "Le cache est plein : suppression du fichier {0}" }, { "cache.inuse", "Impossible de supprimer le fichier {0} parce qu''il est utilisé par cette application" }, { "cache.notdeleted", "Impossible de supprimer le fichier {0} car il peut être en cours d''utilisation par cette et/ou une autre application" }, { "cache.out_of_date", "La copie du cache de {0} n''est pas actualisée\n  Copie du cache : {1}\n  Copie Serveur : {2}" }, { "cache.loading", "Chargement de {0} à partir du cache" }, { "cache.cache_warning", "ATTENTION : Impossible de mettre {0} en cache" }, { "cache.downloading", "Téléchargement de {0} dans le cache" }, { "cache.cached_name", "Nom du fichier mis en cache : {0}" }, { "cache.load_warning", "ATTENTION : erreur de lecture de {0} à partir du cache." }, { "cache.disabled", "Le cache est désactivé par l'utilisateur" }, { "cache.minSize", "Le cache est désactivé, la limite du cache est définie à {0}, au moins 5 Mo doivent être spécifiés" }, { "cache.directory_warning", "ATTENTION : {0} n''est pas un répertoire. La fonction de cache sera désactivée." }, { "cache.response_warning", "ATTENTION : Réponse inattendue {0} pour {1}.  Le fichier sera de nouveau téléchargé." }, { "cache.enabled", "Le cache est activé" }, { "cache.location", "Emplacement : {0}" }, { "cache.maxSize", "Taille maximale : {0}" }, { "cache.create_warning", "ATTENTION : Impossible de créer le répertoire du cache {0}.  La mise en cache sera désactivée." }, { "cache.read_warning", "ATTENTION : Impossible de lire le répertoire du cache {0}.  La mise en cache sera désactivée." }, { "cache.write_warning", "ATTENTION : Impossible d''écrire dans le répertoire du cache {0}.  La mise en cache sera désactivée." }, { "cache.compression", "Niveau de compression : {0}" }, { "cache.cert_load", "Les certificats pour {0} sont lus à partir du cache JAR" }, { "cache.jarjar.invalid_file", "Le fichier .jarjar contient un fichier qui n'est pas au format .jar" }, { "cache.jarjar.multiple_jar", "Le fichier .jarjar contient plusieurs fichiers au format .jar" }, { "cache.version_checking", "Vérification de version pour {0}. La version spécifiée est {1}" }, { "cache.preloading", "Pré-chargement du fichier {0}" }, { "net.proxy.auto.result.error", "Impossible de déterminer le réglage proxy de l'évaluation - repli sur DIRECTE" }, { "lifecycle.applet.found", "Le précédent applet interrompu a été trouvé dans le cache de cycle de vie" }, { "lifecycle.applet.support", "L'applet prend en charge les modèles de cycle de vie hérités - ajout de l'applet au cache de cycle de vie" }, { "lifecycle.applet.cachefull", "Le cache de cycle de vie est plein - veuillez supprimer au moins les applets utilisés récemment" }, { "com.method.ambiguous", "Impossible de sélectionner une méthode, paramètres ambigus" }, { "com.method.notexists", "{0} : cette méthode n''existe pas" }, { "com.notexists", "{0} : cette méthode/propriété  n''existe pas" }, { "com.method.invoke", "Appel de la méthode : {0}" }, { "com.method.jsinvoke", "Appel de la méthode JS : {0}" }, { "com.method.argsTypeInvalid", "Les paramètres ne peuvent pas être convertis selon les types requis" }, { "com.method.argCountInvalid", "Le nombre d'arguments est incorrect" }, { "com.field.needsConversion", "Conversion requise : {0} --> {1}" }, { "com.field.typeInvalid", " impossible de convertir selon le type : {0}" }, { "com.field.get", "Récupération de la propriété : {0}" }, { "com.field.set", "Définition de la propriété : {0}" }, { "rsa.cert_expired", "Le certificat de sécurité a expiré.  Le code est traité comme non signé." }, { "rsa.cert_notyieldvalid", "Le certificat de sécurité n'est pas valable.  Le code est traité comme non signé." }, { "rsa.general_error", "L'éditeur ne peut pas être vérifié par une source de confiance. Le code est traité comme non signé." }, { "dialogfactory.menu.show_console", "Afficher la console Java" }, { "dialogfactory.menu.hide_console", "Masquer la console Java" }, { "dialogfactory.menu.about", "A propos du plug-in Java" }, { "dialogfactory.menu.copy", "Copier" }, { "dialogfactory.menu.open_console", "Ouvrir la console Java" }, { "dialogfactory.menu.about_java", "A propos de Java(TM)" } };

  public Object[][] getContents()
  {
    return contents;
  }
}

/* Location:           /home/wahid/Downloads/webscanning/plugin.jar
 * Qualified Name:     sun.plugin.resources.Activator_fr
 * JD-Core Version:    0.6.2
 */